global_costmap:
    footprint: [[0.1, 0.35], [0.1, -0.35], [-0.5, -0.35], [-0.5, 0.35]]
    footprint_padding: 0.01
    transform_tolerance: 1.0
    update_frequency: 4.0
    publish_frequency: 2.0

    global_frame: map
    robot_base_frame: base_link
    resolution: 0.05
    # width: 1000
    # height: 1000

    # map_type: voxel
    # publish_voxel_map: true
    footprint_clearing_enabled: true
    # max_obstacle_height: 1.0

    static_map: true
    rolling_window: false
    track_unknown_space: true

    plugins: 
        - {name: static,           type: "costmap_2d::StaticLayer"}
        - {name: rgbd_obstacle_layer, type: "spatio_temporal_voxel_layer/SpatioTemporalVoxelLayer"}
        - {name: inflation,        type: "costmap_2d::InflationLayer"}

    static:        
        map_topic: /map
        subscribe_to_updates: true


    rgbd_obstacle_layer:
      enabled:                  true
      voxel_decay:              7    # seconds if linear, e^n if exponential
      decay_model:              0     # 0=linear, 1=exponential, -1=persistent
      voxel_size:               0.05  # meters
      track_unknown_space:      true  # default space is known
      max_obstacle_height:      2.0   # meters
      unknown_threshold:        15    # voxel height
      mark_threshold:           0     # voxel height
      update_footprint_enabled: true
      combination_method:       1     # 1=max, 0=override
      obstacle_range:           3.0   # meters
      origin_z:                 0.0   # meters
      publish_voxel_map:        true # default off
      transform_tolerance:      0.2   # seconds
      mapping_mode:             false # default off, saves map not for navigation
      map_save_duration:        60    # default 60s, how often to autosave
      observation_sources:      rgbd1_mark rgbd1_clear
      rgbd1_mark:
        sensor_frame: laser_link
        data_type: PointCloud2
        topic: /filtered_point_cloud
        marking: true
        clearing: false
        min_obstacle_height: 0.25     # default 0, meters
        max_obstacle_height: 1.0     # default 3, meters
        expected_update_rate: 0.3    # default 0, if not updating at this rate at least, remove from buffer
        observation_persistence: 0.0 # default 0, use all measurements taken during now-value, 0=latest
        inf_is_valid: true           # default false, for laser scans
        voxel_filter: true          # default off, apply voxel filter to sensor, recommend on
        clear_after_reading: true    # default false, clear the buffer after the layer gets readings from it
      rgbd1_clear:
        sensor_frame: laser_link
        data_type: PointCloud2
        topic: /filtered_point_cloud
        marking: false
        clearing: true
        inf_is_valid: true
        max_z: 8.0                  # default 0, meters
        min_z: 0.0                  # default 10, meters
        vertical_fov_angle: 0.7     # default 0.7, radians. For 3D lidars it's the symmetric FOV about the planar axis.
        vertical_fov_padding: 0.05  # 3D Lidar only. Default 0, in meters 
        horizontal_fov_angle: 6.29  # 3D lidar scanners like the VLP16 have 360 deg horizontal FOV.
        decay_acceleration: 5.0     # default 0, 1/s^2. 
        model_type: 1               # default 0, model type for frustum. 0=depth camera, 1=3d lidar like VLP16 or similar

      inflation:
        inflation_radius: 0.55
        cost_scaling_factor: 10.0